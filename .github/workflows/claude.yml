name: Claude Code

on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Install dependencies
        run: pnpm install

      - name: Determine preview deployment name
        id: preview-name
        env:
          EVENT_NAME: ${{ github.event_name }}
          PR_NUM: ${{ github.event.pull_request.number }}
          ISSUE_NUM: ${{ github.event.issue.number }}
        run: |
          if [ "$EVENT_NAME" = "pull_request" ] || [ "$EVENT_NAME" = "pull_request_review_comment" ] || [ "$EVENT_NAME" = "pull_request_review" ]; then
            echo "name=pr-${PR_NUM}" >> $GITHUB_OUTPUT
          else
            echo "name=issue-${ISSUE_NUM}" >> $GITHUB_OUTPUT
          fi

      - name: Build TypeScript (verify compilation)
        run: pnpm run build

      - name: Deploy to Convex preview deployment
        env:
          CONVEX_DEPLOY_KEY: ${{ secrets.CONVEX_DEPLOY_KEY }}
          PREVIEW_NAME: ${{ steps.preview-name.outputs.name }}
        run: |
          DEPLOY_OUTPUT=$(pnpx convex deploy --preview-name "$PREVIEW_NAME" 2>&1)
          echo "$DEPLOY_OUTPUT"

          CONVEX_URL=$(echo "$DEPLOY_OUTPUT" | grep -oE 'https://[^[:space:]]+\.convex\.(cloud|site)' | head -1)

          if [ -z "$CONVEX_URL" ]; then
            echo "Failed to extract Convex URL"
            exit 1
          fi

          echo "CONVEX_URL=$CONVEX_URL" >> $GITHUB_ENV
          curl -sf "$CONVEX_URL" > /dev/null

      - name: Configure environment for preview deployment
        env:
          PREVIEW_NAME: ${{ steps.preview-name.outputs.name }}
        run: |
          grep CLERK .env.claude > .env.local || true
          echo "CONVEX_DEPLOYMENT=$PREVIEW_NAME" >> .env.local
          echo "VITE_CONVEX_URL=$CONVEX_URL" >> .env.local
          cat .env.local

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}
          
          # This is an optional setting that allows Claude to read CI results on PRs
          additional_permissions: |
            actions: read

          # Optional: Give a custom prompt to Claude. If this is not specified, Claude will perform the instructions specified in the comment that tagged it.
          # prompt: 'Update the pull request description to include a summary of changes.'

          # Optional: Add claude_args to customize behavior and configuration
          # See https://github.com/anthropics/claude-code-action/blob/main/docs/usage.md
          # or https://docs.claude.com/en/docs/claude-code/sdk#command-line for available options
          # claude_args: '--model claude-opus-4-1-20250805 --allowed-tools Bash(gh pr:*)'

